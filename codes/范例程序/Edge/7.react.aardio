//React hooks
import win.ui;
/*DSG{{*/
var winform = win.form(text="React";right=1345;bottom=780)
/*}}*/

import web.view;
var wb = web.view(winform);

wb.external = { 
	getText = function(){
		return tostring( time() );
	} 
}

wb.html = /**
<!DOCTYPE html><html>
<head>
	<meta charset="utf-8" />
	<title>React Tutorial</title> 
	<script src="https://cdn.jsdelivr.net/npm/react@17/umd/react.production.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/react-dom@17/umd/react-dom.production.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/moment/moment.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/antd@4/dist/antd.min.js"></script>
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/antd@4/dist/antd.min.css"> 
	<script src="https://cdn.jsdelivr.net/npm/@babel/standalone@7/babel.min.js"></script>
	<style type="text/css">
	body{ margin:50px; } 
	</style>
</head>
<body>  

<script type="text/babel"> 
	const { useState,useEffect,useCallback,useRef } =  React;
	const { Button,DatePicker,Alert,Tooltip  } = antd;

	const App = () => {
			const [date, setDate] = useState(null);
			const [alertType,setAlertType] = useState("warning");
			const [text,setText] = useState("");
	
			useEffect(() => {
				const timer = setInterval(async () => {
					const text = await aardio.getText();
					setText(text);
				}, 1000);
			
				return () => {
					clearInterval(timer);
				};
			}, []); 
			
			const handleChange = value => {
				setAlertType("success");
				setDate(value);
			};
			return ( 
				<div style={{ width: 400, margin: '100px auto' }}>
		
				<DatePicker onChange={handleChange} />
				<div style={{ marginTop: 16 }}>
					<Alert message={date ? date.format('YYYY年MM月DD日') : '未选择日期'}  type={ alertType } showIcon closable />
				</div>
				
				<span>{ text }</span>
				</div> 
			);
	};
		
	ReactDOM.render(<App />, document.querySelector('#app'));
	
</script>

<div id="app"></div>
</body> 
**/

winform.show();
win.loopMessage();