//external服务器
import win.ui;
/*DSG{{*/
var winform = win.form(text="RPC 服务端 - 支持任意本地网页调用 aardio 函数";right=759;bottom=469)
winform.add(
edit={cls="richedit";left=23;top=24;right=730;bottom=446;edge=1;hscroll=1;multiline=1;vscroll=1;z=1}
)
/*}}*/

import web.rpc.externalServer;
var externalServer = web.rpc.externalServer();

externalServer.external = {
    test = function(...){
        winform.edit.print("external.test 被调用",...)
    }
}

winform.edit.print( "启动服务器：",externalServer.start(8080))
winform.edit.print( "请在网页中引入：",externalServer.getUrl("aardio.js"))

externalServer.httpHandler["/test.html"] = function(response,request){
    var html = /**
    <!doctype html>
    <html>
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <script src="<?=owner.rpcUrl?>"></script>
        <script>
        window.onload = function(){
            console.log(1111)
            console.log(aardio)
            aardio.test("这是网页调用 aardio 的参数",1122);
        }
        
        </script>
    </head>
    <body><?=owner.rpcUrl?></body></html>
    **/
    response.write( string.loadcode(html,{rpcUrl=externalServer.getUrl("aardio.js")}) );	
}

import process;
process.openUrl(externalServer.getUrl("/test.html"))

winform.show();
win.loopMessage();

/**
global.d.ts 声明 aardio 对象演示：

declare global {

    interface aardioExternal {  
    /* 添加 external 接口导出的 aardio  函数 */
    test: (name: string,value: number) => Promise<string>; 
    }
}
export {};
**/