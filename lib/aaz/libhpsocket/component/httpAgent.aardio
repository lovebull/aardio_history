import util.metaProperty;
import aaz.libhpsocket.component.properties.httpAgent;

namespace aaz.libhpsocket.component;
var _dll = ..aaz.libhpsocket._dll;

class httpAgent{
	ctor(listener, pAgent){
		if(pAgent){
			this.pAgent = pAgent;
		}
		elseif(listener){
			this.pAgent = _dll.Create_HP_HttpAgentP(listener);
			..table.gc(this, "destroy");
		}
		else {
			error("请指定参数@1 pAgent 或参数@2 pListener", 2);
		}
	};
	destroy = function(){
		if(this.pAgent){
			_dll.Destroy_HP_HttpAgent(this.pAgent);
			this.pAgent = null;
		}
	};
	@_metaProperty;
}
httpAgent._metaProperty = ..util.metaProperty(..aaz.libhpsocket.component.properties.httpAgent);

/**intellisense(aaz.libhpsocket.component)
httpAgent() = 创建 httpAgent 组件\n!httpAgent.
end intellisense**/

/**intellisense(!httpAgent)
destroy() = 销毁 httpAgent 对象
sendRequest(连接 id, 请求方法, 请求路径, 请求头, 请求体) = 发送请求\n\n向服务端发送 HTTP 请求
startHttp(连接 id) = 启动 HTTP 通信\n\n当通信组件设置为非自动启动 HTTP 通信时，需要调用本方法启动 HTTP 通信
start() = 启动组件
stop() = 关闭组件
connect() = 连接服务器
send() = 发送数据
end intellisense**/
