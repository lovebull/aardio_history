//_ 公共函数库

import inet.url;
import crypt.des;
import crypt.bin;
import gdip.bitmap;
import gdip.graphics;
import gdip.image;
import access;

namespace common

string = ..string;
table = ..table;

formatThousandSeperator = function(n){//千分位符号
    return ( string.replace(tostring(n),"\d+",function(s){
        while(  var c; s,c = string.replace(s,"(\d)(\d{3})!\D","\1,\2");c ) {};
        return s;  
    },1) )
}

formatMoney = function(money){//格式化钱,并千分符
	money = tostring(money);
	var f = string.match(money,"\.(\d+)")
	if(#f == 1){
		money = money ++ "0";
	}elseif(#f == 0){
		money = money ++ ".00";
	}
	money = formatThousandSeperator(money);
	return money;
}

toNumber = function(num){//转换成数字,
	num = string.replace(num:"",",","");
	var n,l = tonumber(num);
	if(l != #num) n = 0;
	return n; 
}

encryptPwd = function(pwd,keystr = "aardiomvc"){//加密
	var des = ..crypt.des();
	des.setPassword(keystr)
	pwd = des.encrypt(pwd);
	pwd = ..crypt.bin.encodeBase64(pwd);
	return pwd;
}

decryptPwd = function(pwd,keystr = "aardiomvc"){//解密
	var des = ..crypt.des();
	des.setPassword(keystr);
	pwd = ..crypt.bin.decodeBase64(pwd);
	pwd = des.decrypt(pwd);
	return pwd;
}

getNowTime = function(){
	var nowtime = ..time();
	nowtime.format="%Y-%m-%d %H:%M:%S";
	return tostring(nowtime); 
}

getNowDate = function(date){
	var nowtime = date : ..time();
	nowtime.format="%Y-%m-%d";
	return tostring(nowtime); 
}

..math.randomize();
getSysNo = function(ex="",n=4){//生成编号 年月日
	var nowtime = ..time();
	nowtime.format = "%y%m%d";
	nowtime = ex ++ tostring(nowtime) ++ string.random(n,"0123456789");
	return nowtime; 
}

getSysNoEx = function(ex="",n=3){//生成编号 年月日时分秒
	var nowtime = ..time();
	nowtime.format="%Y%m%d%H%M%S";	
	nowtime = ex ++ tostring(nowtime) ++ string.random(n,"0123456789");
	return nowtime; 
}

fileMime  = {
    ["html"] = "text/html";
    ["css"] = "text/css";
    ["xml"] = "text/xml";
    ["xhtml"] = "application/xhtml+xml";
    ["js"] = "application/x-javascript";
    ["txt"] = "text/plain"; 
    ["rtf"] = "application/rtf";
    ["pdf"] = "application/pdf";
    ["ppt"] = "application/vnd.ms-powerpoint ";  
    ["doc"] = "application/msword"; 
    ["bmp"] = "application/x-MS-bmp"; 
    ["png"] = "image/png"; 
    ["gif"] = "image/gif"; 
    ["jpg"] = "image/jpeg"; 
    ["avi"] = "video/x-msvideo";
    ["mid"] = "audio/midi";
    ["midi"] = "audio/x-midi";
    ["mpg"] = "video/mpeg";
    ["mp3"] = "audio/x-mpeg";
    ["swf"] = "application/x-shockwave-flash";
    ["mp4"] = "video/mp4";
    ["wmv"] = "video/x-ms-wmv";
    ["zip"] = "application/zip";
    ["gz"] = "application/x-gzip";
    ["7z"] = "application/x-7z-compressed";
    ["lzma"] = "application/x-lzma";
    ["tar"] = "application/x-tar";
    ["rar"] = "application/x-rar-compressed";
} 

getExtName = function(mime){
    mime = string.lower(mime);
	for(ext,fmime in fileMime){
		fmime = string.lower(fmime);
		if(fmime == mime) return ext; 
	}
}

uploadFile = function(){//获取上传附件路径
	var fileData = ..request.postFileData();
	if(!fileData || !fileData.file) return null,"无附件数据";

	var nowtime = ..time();
	nowtime.format = "%Y/%m/%d";
	var fileDir = "/upload/" ++ tostring(nowtime);	
	var dir = ..MVC_WWW_DIR ++ fileDir;
	..fsys.createDir(dir);	
	nowtime.format = "%H%M%S";
	var ext = getExtName(fileData.file.contentType);
	if(!ext) return null,"不支持上传的文件类型"; 
	var filename = tostring(nowtime) ++ ..string.random(4) ++ "." ++ ext;
	var savename = dir ++ "/" ++ filename;
	var fileurl = fileDir ++ "/" ++ filename;
	var ok,err = fileData.file.save(savename);
	if(ok){
		if( ..io.exist(savename) ){
			return fileurl; 
		}
		else {
			return null,"上传失败"; 
		}
	}
	else {
		return null,err; 
	}
}

//生成缩略图,返回缩图片url，第5个参数是否按比例缩放
imageThumbnail = function(imageUrl,w,h,saveUrl,constRatio){
	saveUrl := string.replace(imageUrl,"\.","_" ++ w ++ "_" ++ h ++ ".");
	var thumUrl = saveUrl;
	if(!..io.exist(imageUrl	)){
		imageUrl = ..MVC_WWW_DIR ++ imageUrl;
		saveUrl = ..MVC_WWW_DIR ++ saveUrl;
	}
	if(!..io.exist(imageUrl	)) return false,"生成缩略图失败,图片不存在"; 
	var img = ..gdip.image(imageUrl);
	var width = img.width;
	var height = img.height; 
	if(w > width || h > height) return false,"指定宽度或高度比原图大";
	if( w < 1 ) w = width * w;
	if( h < 1 ) h = height * h;	
	if( constRatio ){
		if ( w / width < h / height ) {
			h = w * height / width;
		}
		else {
			w = h * width / height;
		}
	}	 
	var bitmagNew = ..gdip.bitmap(w,h);
	var graphics = bitmagNew.getGraphics();
	graphics.drawImageRect(img,0,0,w,h);	
	var ok,err = bitmagNew.save(saveUrl);
	bitmagNew.dispose();
	img.dispose();
	if(ok){
		return thumUrl;
	}
	else {
		return null,err; 
	}
}

isMobile = function(){//检测是否手机访问
	var userAgent = ..request.headers["user-agent"]:"";
	return string.find(userAgent,"<iPhone>|<iPod>|<Android>|<ios>|<SymbianOS>")
}

//输出分页
pageList = function(tab){
	var tabReslut = {}
	tabReslut["total"] = #tab;
	tabReslut["rows"] = tab;
	return tabReslut; 
}

//导出excel,参数：tabPage={rows={{a="1";b="2"};{a="3";b="4"}};columns={{field="a";title="字段a"};{field="b";title="字段b";formatter=function(value){ return "自定义值"}}}
exportExcel = function(tabPage,filename){
	if(!filename){
		var tnow = ..time();
		tnow.format = "%Y%m%d-%H%M%S";
		filename = tostring(tnow);
	}
	filename += ".xls";
	var pathname = ..MVC_LOG_DIR ++ "temp\" ++ filename;
	..fsys.createDir(..MVC_LOG_DIR ++ "temp\");
	var dbXls,err = ..access(pathname); //文件不存在可自动创建
    if( !dbXls ) return null,err;
    var sheetname = "sheet2";
    if(dbXls.existsTable( sheetname ) ) dbXls.exec("DROP TABLE [" ++ sheetname ++ "]");
    var tab,tabHead = {},{};
    table.push(tab,"CREATE TABLE " ++ sheetname ++ "(");
    for(n=1;#tabPage.columns;1){
        var t = tabPage.columns[n];
        table.push(tab,t.title," MEMO",(n<#tabPage.columns ? "," : ")"));
        tabHead[t.field] = t;
    }
    dbXls.exec(string.join(tab));
 	var tsave,sql;
 	for(i=1;#tabPage.rows;1){
 		var trow = tabPage.rows[i];
 		tsave = {};
        for(k,v in trow){
        	var t = tabHead[k];
        	if(!t) continue;
        	tsave[t.title] = t.formatter ? t.formatter(v) : v;//自定义值函数;
        }
        sql = ..carl.sql.ms.getInsertSql("[" ++ sheetname ++ "]",tsave);
        dbXls.exec(sql);
 	}
    dbXls.close();
    var strxls = string.load(pathname);
    ..io.remove(pathname);
	..response.contentType = "application/vnd.ms-excel";
	..response.headers["Content-Disposition"] = "attachment; filename*=UTF-8''" ++ (..inet.url.encode(filename));	
	..response.write(strxls);
	return true;
}

//校验二代18位身份证是否合法
checkIDcard = function(A){
	if(!#A) return false;
	A = string.trim(A);
	var W = {7;9;10;5;8;4;2;1;6;3;7;9;10;5;8;4;2};
	var jy = {"1";"0";"X";"9";"8";"7";"6";"5";"4";"3";"2"};
	var s = 0;
	for(i=1;17;1){
		var Ai = tonumber(A[[i]]);
		if(Ai) s += Ai*W[i];
	}
	var Y = s%11;
	var a = string.upper(string.right(A,1));
	var b = jy[Y+1];
	return a == b;
}